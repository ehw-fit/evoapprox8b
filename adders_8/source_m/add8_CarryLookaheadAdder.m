% This code is a part of EvoApproxLib library (ehw.fit.vutbr.cz/approxlib) distributed under The MIT License.
% When used, please cite the following article(s): V. Mrazek, R. Hrbacek, Z. Vasicek and L. Sekanina, "EvoApprox8b: Library of approximate adders and multipliers for circuit design and benchmarking of approximation methods". Design, Automation & Test in Europe Conference & Exhibition (DATE), 2017, Lausanne, 2017, pp. 258-261. doi: 10.23919/DATE.2017.7926993 
% This file contains a circuit from evoapprox8b dataset. Note that a new version of library was already published.

function [ c ] = add8_CarryLookaheadAdder( a, b )
% Approximate function add8_CarryLookaheadAdder
%  Library = EvoApprox8b
%  Circuit = add8_CLA
%  Area   (180) = 3080
%  Delay  (180) = 1.190
%  Power  (180) = 1004.30
%  Area   (45) = 221
%  Delay  (45) = 0.440
%  Power  (45) = 80.84
%  Nodes = 79
%  HD = 0
%  MAE = 0.00000
%  MSE = 0.00000
%  MRE = 0.00 %
%  WCE = 0
%  WCRE = 0 %
%  EP = 0.0 %
  a = uint16(a);
  b = uint16(b);
  c = 0;
  n0 = bitand(bitshift(a, -0), 1, 'uint16');
  n2 = bitand(bitshift(a, -1), 1, 'uint16');
  n4 = bitand(bitshift(a, -2), 1, 'uint16');
  n6 = bitand(bitshift(a, -3), 1, 'uint16');
  n8 = bitand(bitshift(a, -4), 1, 'uint16');
  n10 = bitand(bitshift(a, -5), 1, 'uint16');
  n12 = bitand(bitshift(a, -6), 1, 'uint16');
  n14 = bitand(bitshift(a, -7), 1, 'uint16');
  n16 = bitand(bitshift(b, -0), 1, 'uint16');
  n18 = bitand(bitshift(b, -1), 1, 'uint16');
  n20 = bitand(bitshift(b, -2), 1, 'uint16');
  n22 = bitand(bitshift(b, -3), 1, 'uint16');
  n24 = bitand(bitshift(b, -4), 1, 'uint16');
  n26 = bitand(bitshift(b, -5), 1, 'uint16');
  n28 = bitand(bitshift(b, -6), 1, 'uint16');
  n30 = bitand(bitshift(b, -7), 1, 'uint16');
  n32 = bitxor(n0, n16);
  n33 = bitand(n0, n16);
  n34 = bitxor(n2, n18);
  n35 = bitand(n2, n18);
  n36 = bitxor(n4, n20);
  n37 = bitand(n4, n20);
  n38 = bitxor(n6, n22);
  n39 = bitand(n6, n22);
  n40 = bitxor(n8, n24);
  n41 = bitand(n8, n24);
  n42 = bitxor(n10, n26);
  n43 = bitand(n10, n26);
  n44 = bitxor(n12, n28);
  n45 = bitand(n12, n28);
  n46 = bitxor(n14, n30);
  n47 = bitand(n14, n30);
  n48 = bitand(n34, n33);
  n50 = bitor(n35, n48);
  n54 = bitand(n36, n48);
  n56 = bitand(n36, n35);
  n58 = bitor(n37, n56);
  n60 = bitor(n58, n54);
  n62 = bitand(n38, n36);
  n64 = bitand(n62, n48);
  n66 = bitand(n38, n56);
  n68 = bitand(n38, n37);
  n70 = bitor(n39, n68);
  n72 = bitor(n66, n64);
  n74 = bitor(n70, n72);
  n76 = bitand(n40, n38);
  n78 = bitand(n40, n64);
  n80 = bitand(n76, n56);
  n82 = bitand(n40, n68);
  n84 = bitand(n40, n39);
  n86 = bitor(n41, n84);
  n88 = bitor(n82, n80);
  n90 = bitor(n86, n88);
  n92 = bitor(n90, n78);
  n96 = bitand(n42, n40);
  n98 = bitand(n96, n64);
  n100 = bitand(n42, n80);
  n102 = bitand(n96, n68);
  n104 = bitand(n42, n84);
  n106 = bitand(n42, n41);
  n108 = bitor(n43, n106);
  n110 = bitor(n104, n102);
  n112 = bitor(n100, n98);
  n114 = bitor(n108, n110);
  n116 = bitor(n114, n112);
  n118 = bitand(n44, n42);
  n122 = bitand(n44, n96);
  n124 = bitand(n122, n64);
  n126 = bitand(n118, n80);
  n128 = bitand(n44, n102);
  n130 = bitand(n118, n84);
  n132 = bitand(n44, n106);
  n134 = bitand(n44, n43);
  n136 = bitor(n45, n134);
  n138 = bitor(n132, n130);
  n140 = bitor(n128, n126);
  n142 = bitor(n136, n138);
  n144 = bitor(n140, n124);
  n146 = bitor(n142, n144);
  n148 = bitand(n46, n44);
  n150 = bitand(n148, n96);
  n152 = bitand(n150, n64);
  n154 = bitand(n46, n118);
  n156 = bitand(n154, n80);
  n158 = bitand(n148, n102);
  n160 = bitand(n46, n130);
  n162 = bitand(n148, n106);
  n164 = bitand(n46, n134);
  n166 = bitand(n46, n45);
  n168 = bitor(n47, n166);
  n170 = bitor(n164, n162);
  n172 = bitor(n160, n158);
  n174 = bitor(n156, n152);
  n176 = bitor(n168, n170);
  n178 = bitor(n172, n174);
  n180 = bitor(n176, n178);
  n182 = bitxor(n34, n33);
  n184 = bitxor(n36, n50);
  n186 = bitxor(n38, n60);
  n188 = bitxor(n40, n74);
  n190 = bitxor(n42, n92);
  n192 = bitxor(n44, n116);
  n194 = bitxor(n46, n146);
  c = bitor(c, bitshift(bitand(n32, 1), 0));
  c = bitor(c, bitshift(bitand(n182, 1), 1));
  c = bitor(c, bitshift(bitand(n184, 1), 2));
  c = bitor(c, bitshift(bitand(n186, 1), 3));
  c = bitor(c, bitshift(bitand(n188, 1), 4));
  c = bitor(c, bitshift(bitand(n190, 1), 5));
  c = bitor(c, bitshift(bitand(n192, 1), 6));
  c = bitor(c, bitshift(bitand(n194, 1), 7));
  c = bitor(c, bitshift(bitand(n180, 1), 8));
end